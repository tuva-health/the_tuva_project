name: dbt_v1.8.6_bigquery_build_full_refresh

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main


env:
  TUVA_BIGQUERY_TOKEN: ${{ secrets.TUVA_BIGQUERY_TOKEN }}
  TUVA_BIGQUERY_PROJECT: ${{ secrets.TUVA_BIGQUERY_PROJECT }}


  
jobs:
  clinical_and_claims_enabled:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Send Slack alert that PR has been opened
        id: slack
        uses: slackapi/slack-github-action@v1.27.0
        with:
          # For posting a rich message using Block Kit
          payload: |
            {
              "text": "CI Testing is starting on: ${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "CI Testing is starting on: ${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dbt-core and BigQuery adapter
        run: |
          python -m pip install --upgrade pip
          pip install dbt-core==1.8.6 dbt-bigquery        

      - name: Handle BigQuery token
        run: |
          echo "${{ secrets.TUVA_BIGQUERY_TOKEN }}" > temp_token.txt
          if [ -s temp_token.txt ]; then  # Checks if the file has content
            echo "Setting up BigQuery credentials..."
            cat temp_token.txt > ./ci_testing/creds.json
            rm temp_token.txt  # Clean up the temporary file
          else
            echo "No BigQuery credentials provided. Exiting."
            exit 1
          fi
        shell: bash

      - name: Create dbt profiles.yml for BigQuery
        run: |
          set -x  # Enable debugging
          mkdir -p ./ci_testing/profiles/bigquery
          echo "default:
            target: dev
            outputs:
              dev:
                type: bigquery
                method: service-account
                project: ${{ secrets.TUVA_BIGQUERY_PROJECT }}
                keyfile: ./ci_testing/creds.json
                dataset: my_dataset
                threads: 1
                timeout_seconds: 300
                priority: interactive" > ./ci_testing/profiles/bigquery/profiles.yml

      - name: List profiles directory
        run: ls -la ./ci_testing/profiles/bigquery

      - name: dbt-deps
        run: dbt deps --profiles-dir ./ci_testing/profiles/bigquery
        working-directory: ci_testing

      - name: dbt-debug
        run: dbt debug --profiles-dir ./ci_testing/profiles/bigquery
        working-directory: ci_testing

      - name: dbt-build
        run: |
          dbt build --full-refresh --profiles-dir ./ci_testing/profiles/bigquery --vars '{"input_database":"dev_ci_testing","input_schema":"input_layer","clinical_enabled":true,"claims_enabled":true}'
        working-directory: ci_testing

      - name: Get the result
        if: ${{ always() }}
        run: echo "${{ steps.dbt-build.outputs.result }}"
        shell: bash
